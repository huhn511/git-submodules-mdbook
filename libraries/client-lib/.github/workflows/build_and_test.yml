name: Build and run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'specs/**'

jobs:
  build-all-and-test-crate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'

    - name: Get current date
      if: matrix.os == 'windows-latest'
      run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Cache cargo registry
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo index
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache cargo target
      uses: actions/cache@v2.1.4
      with:
        path: target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}
    - name: Cache nodejs binding cargo target
      uses: actions/cache@v2.1.4
      with:
        path: bindings/nodejs/native/target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-build-node-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-build-node-target-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache python binding cargo target
      uses: actions/cache@v2.1.4
      with:
        path: bindings/python/native/target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-build-python-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-build-python-target-${{ hashFiles('**/Cargo.toml') }}

    - name: Set seeds in .env
      run: mv ".env.example" .env

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all --release

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --release

    - name: Build nodejs binding
      run: yarn
      working-directory: bindings/nodejs

    - name: Build python binding
      run: cargo build --all --release
      working-directory: bindings/python/native
  
  test-python-binding:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'

    - name: Get current date
      if: matrix.os == 'windows-latest'
      run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install dependencies for python binding test
      run: |
        python -m pip install --upgrade setuptools pip wheel
        python -m pip install tox-gh-actions

    - name: Test python binding
      run: tox
      working-directory: bindings/python/native